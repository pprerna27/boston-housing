import pandas as pd
import re

# Example text (replace with actual extracted text)
pdf_text = ["Chapter 1: Introduction", "Article 1: Basics of Python", "..."]

# Initialize empty lists for each column
categories = []
category_names = []
subcategories = []
subcategory_names = []
content = []

# Parse the text and populate the lists
for line in pdf_text:
    if "Chapter" in line:
        chapter_number = re.search(r"Chapter (\d+)", line).group(1)
        categories.append(chapter_number)
        category_names.append(line.split(":")[1].strip())
    elif "Article" in line:
        article_number, article_name = re.split(r":\s+", line, maxsplit=1)
        subcategories.append(article_number)
        subcategory_names.append(article_name.strip())
    else:
        content.append(line.strip())

# Create DataFrame
df = pd.DataFrame({

import PyPDF2
import pandas as pd
import re

def extract_pdf_to_dataframe(pdf_path):
    """
    Extracts structured data from a PDF using PyPDF2 and stores it in a DataFrame.
    The DataFrame will have columns: Title, Section, Subsection, Content.
    """
    data = []
    current_title = None
    current_section = None
    current_subsection = None
    content_buffer = ""

    # Open the PDF file
    with open(pdf_path, "rb") as file:
        reader = PyPDF2.PdfReader(file)
        num_pages = len(reader.pages)

        for page_num in range(num_pages):
            text = reader.pages[page_num].extract_text()
            if not text:
                continue  # Skip if no text is extracted (could be an image-based page)

            lines = text.split("\n")

            for line in lines:
                line = line.strip()

                # Identify Titles (e.g., "Schedule 4")
                if re.match(r"^Schedule\s+\d+", line, re.IGNORECASE):
                    current_title = line

                # Identify Sections (e.g., "1. Interpretation")
                elif re.match(r"^\d+\.", line):
                    if current_section and content_buffer:
                        data.append([current_title, current_section, current_subsection, content_buffer.strip()])
                        content_buffer = ""

                    current_section = line
                    current_subsection = None

                # Identify Subsections (e.g., "(1)", "(a)", "(b)", "(i)")
                elif re.match(r"^\w+", line):
                    if current_subsection and content_buffer:
                        data.append([current_title, current_section, current_subsection, content_buffer.strip()])
                        content_buffer = ""

                    current_subsection = line

                # Store content for the current subsection
                else:
                    if current_subsection:
                        content_buffer += " " + line

            # Append last collected content
            if current_subsection and content_buffer:
                data.append([current_title, current_section, current_subsection, content_buffer.strip()])

    # Create a DataFrame
    df = pd.DataFrame(data, columns=["Title", "Section", "Subsection", "Content"])
    return df

# Usage Example
pdf_path = "your_pdf_file.pdf"  # Replace with your actual PDF file path
df = extract_pdf_to_dataframe(pdf_path)
print(df.head())  # View extracted data